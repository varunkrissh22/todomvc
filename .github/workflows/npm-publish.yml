# Github Workflow to Show the Github OIDC Integration with JFrog
name: "JFrog-GitHub-OIDC-Integration"
on: push

# This is required as per
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#adding-permissions-settings
permissions:
  actions: read # For detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  security-events: write # Required for uploading code scanning
  attestations: write
  contents: read
jobs:
  build:
     runs-on: ubuntu-latest
     env:
      OIDC_AUDIENCE: 'varun-github-aud'
      OIDC_PROVIDER: 'varun-github-oidc'
      # Prerequisite Repository Settings in UI: 'training-npm' used as PLATFORM_REPO, is a virtual repository. This Virtual Repository, 
      # consists of a local npm repository to upload the artifact '' and a remote npm repo " to resolve build dependencies. 
      #The Default Deployment Repository Setting, inside the Virtual Repo is set to Local Repo ''
      PLATFORM_REPO: 'varunm-npm'
     defaults:
       run:
         working-directory: examples/typescript-react
     steps:
       - name: Checkout
         uses: actions/checkout@v3
              
       - name: Setup Node npm
         uses: actions/setup-node@v3
   
       - name: Setup JFrog CLI
         uses: jfrog/setup-jfrog-cli@v4
         env:  
           JF_URL: ${{ vars.JF_URL }}
         with:
           oidc-provider-name: ${{ env.OIDC_PROVIDER }}
           oidc-audience: ${{ env.OIDC_AUDIENCE }}
